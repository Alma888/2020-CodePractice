# 2020-CodePractice

一、private、default、protected、public

                         同类中成员      同包中成员       不同包子类       不同包非子类
               public       √              √               √                √
               protected    √              √               √                ×
               default      √              √               ×                ×
               private      √              ×               ×                ×

private（私有权限）
           1、作用
                   （1）可以修饰成员方法、构造方法、成员变量
                2、应用场景
                   （1）被private修饰的成员，在本类中被访问；
                   （2）将成员变量私有化，对外提供对应的set()，get()方法；
                3、好处
                   （1）private修饰成员，提高了对数据访问的安全性
default（默认权限）
           1、作用
                   （1）可以修饰类、成员方法、构造方法、成员变量
                2、应用场景
                   （1）被default修饰的成员，在本类中被访问；
                   （2）被default修饰的成员，在同一个包中被访问；
                3、好处
                   （1）类或方法若不写修饰符，则默认是default
protected（受保护权限）
           1、作用
                   （1）可以修饰成员方法、构造方法、成员变量
                2、应用场景
                   （1）被protected修饰的成员，在本类中被访问；
                   （2）被protected修饰的成员，在同一个包中被访问；
                   （3）被protected修饰的成员，在处于不同包的子类中被访问
                3、好处
                   （1）和private一样，提高了对数据访问的安全性。
                   （2）它提供给外部包中的类访问的机会，增加了程序之间的联系
                            提供了更多样的方式
public（公共权限）
           1、作用
                   （1）可以修饰类、成员方法、构造方法、成员变量、接口
                2、应用场景
                   （1）被public修饰的成员，在本类中被访问；
                   （2）被public修饰的成员，在同一个包中被访问；
                   （3）被public修饰的成员，在处于不同包的子类中被访问
                   （4）被public修饰的成员，在不同包的类中被访问
             


